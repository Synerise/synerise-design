.button-disabled(@color; @bg; @border) {
  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      .button-color(@color, @bg, @border);
      box-shadow: none;
      svg {
        fill: @color !important;
        color: @color;
      }
    }
  }
}

.button-hover(@color; @bg; @border) {
  box-shadow: none;
  &:not(:disabled):not(:focus) {
    .button-color(@color, @bg, @border);
    span {
      color: @color;
    }
    svg {
      fill: @color !important;
      color: @color;
    }
  }
}

.button-variant-primary() {
  .button-color(@btn-primary-color, @btn-primary-bg, @btn-primary-bg);

  .btn-focus {
    box-shadow: inset 0 0 0 0px @btn-default-border;
  }

  &:hover {
    .button-hover(@btn-primary-color, @btn-primary-hover-bg, @btn-primary-hover-bg);
  }

  &:focus {
    .button-color(@btn-primary-color, @btn-primary-bg, @btn-primary-focus-bg);
    .btn-focus {
      box-shadow: inset 0 0 0 2px @primary-color-darker-1;
    }
  }

  &:active,
  &.active {
    .button-color(@btn-primary-color, @btn-primary-active-bg, @btn-primary-active-bg);
  }

  .btn-ripple {
    background-color: @btn-primary-active-bg;
  }

  svg {
    fill: @white;
    color: @white;
  }

  .button-disabled(@btn-disable-primary-color, @btn-disable-primary-bg, @btn-disable-primary-border);
}

.btn-primary() {
  .button-variant-primary();
}

.button-variant-default() {
  .button-color(@btn-default-color, @btn-default-bg, @btn-default-border);

  .btn-focus {
    box-shadow: inset 0 0 0 1px @btn-default-border;
  }

  &:hover {
    .button-hover(@primary-color, @btn-default-hover-bg, @btn-default-border);
  }

  &:focus {
    .button-color(@btn-default-color, @btn-default-focus-bg, @btn-default-border);
    .btn-focus {
      box-shadow: inset 0 0 0 2px @primary-color;
    }
  }

  &:active,
  &.active {
    .button-color(@btn-default-color, @btn-default-active-bg, @btn-default-active-bg);
    border-color: @btn-default-border;
  }

  .btn-ripple {
    background-color: @btn-default-active-bg;
  }

  .button-disabled(@btn-disable-default-color, @btn-disable-default-bg, @btn-disable-default-border);

  &:not(&-circle):not(&-circle-outline) &-icon-only {
    padding-left: 12px !important;
    padding-right: 12px !important;
  }

  &-sm&:not(&-circle):not(&-circle-outline) &-icon-only {
    padding-left: 8px !important;
    padding-right: 8px !important;
  }

  &-lg&:not(&-circle):not(&-circle-outline) &-icon-only {
    padding-left: 16px !important;
    padding-right: 16px !important;
  }
}

.btn-default() {
  .button-variant-default();
}

.button-variant-tertiary() {
  .button-color(@btn-tertiary-color, @btn-tertiary-bg, @btn-tertiary-border);

  .btn-focus {
    box-shadow: inset 0 0 0 0px @btn-default-border;
  }

  &:hover {
    .button-hover(@btn-tertiary-color, @btn-tertiary-hover-bg, @btn-tertiary-border);
  }

  &:focus {
    .button-color(@btn-tertiary-color, @btn-tertiary-focus-bg, @btn-tertiary-focus-bg);
    .btn-focus {
      box-shadow: inset 0 0 0 2px @primary-color;
    }
  }

  &:active,
  &.active {
    .button-color(@btn-tertiary-color, @btn-tertiary-active-bg, @btn-tertiary-active-bg);
  }

  .btn-ripple {
    background-color: @btn-tertiary-active-bg;
  }

  .button-disabled(@btn-disable-tertiary-color, @btn-disable-tertiary-bg, @btn-disable-tertiary-border);
}

.btn-tertiary() {
  .button-variant-tertiary();
}

.button-variant-tertiary-white() {
  .button-color(@btn-tertiary-white-color, @btn-tertiary-white-bg, @btn-tertiary-white-border);
  .btn-focus {
    box-shadow: inset 0 0 0 0px @primary-color;
  }
  &:hover {
    .button-hover(@btn-tertiary-white-color, @btn-tertiary-white-hover-bg, @btn-tertiary-white-border);
  }

  &:focus {
    .button-color(@btn-tertiary-white-color, @btn-tertiary-white-focus-bg, @btn-tertiary-white-focus-bg);
    .btn-focus {
      box-shadow: inset 0 0 0 2px @primary-color;
    }
  }

  &:active,
  &.active {
    .button-color(@btn-tertiary-white-color, @btn-tertiary-white-active-bg, @btn-tertiary-white-active-bg);
  }

  .btn-ripple {
    background-color: @btn-tertiary-white-active-bg;
  }

  svg {
    fill: @white;
    color: @white;
  }

  .button-disabled(
    @btn-disable-tertiary-white-color,
    @btn-disable-tertiary-white-bg,
    @btn-disable-tertiary-white-border
  );
}

.btn-tertiary-white() {
  .button-variant-tertiary-white();
}

.button-variant-ghost() {
  .button-color(@btn-ghost-color, @btn-ghost-bg, @btn-ghost-border);
  box-shadow: none;
  border-color: transparent;
  .btn-focus {
    box-shadow: inset 0 0 0 0px transparent;
  }

  &:hover {
    .button-hover(@primary-color, @btn-ghost-hover-bg, @btn-ghost-border);
  }

  &:focus {
    .button-color(@btn-ghost-color, @btn-ghost-focus-bg, @btn-ghost-focus-bg);
    .btn-focus {
      box-shadow: inset 0 0 0 2px @primary-color;
    }
  }

  &:active,
  &.active {
    .button-color(@btn-ghost-color, @btn-ghost-active-bg, @btn-ghost-active-bg);
  }

  .btn-ripple {
    background-color: @btn-ghost-active-bg;
  }

  .button-disabled(@btn-disable-ghost-color, @btn-disable-ghost-bg, @btn-disable-ghost-border);
}

.btn-ghost() {
  .button-variant-ghost();
}

.button-variant-ghost-primary() {
  .button-color(@btn-ghost-primary-color, @btn-ghost-primary-bg, @btn-ghost-primary-border);
  .btn-focus {
    box-shadow: inset 0 0 0 0px transparent;
  }

  .btn-spinner {
    svg {
      fill: @grey-600;
      color: @grey-600;
    }
  }

  &:hover {
    .button-hover(@btn-ghost-primary-color, @btn-ghost-primary-hover-bg, @btn-ghost-primary-border);
  }

  &:focus {
    .button-color(@btn-ghost-primary-color, @btn-ghost-primary-focus-bg, @btn-ghost-primary-focus-bg);
    .btn-focus {
      box-shadow: inset 0 0 0 2px @primary-color;
    }
  }

  &:active,
  &.active {
    .button-color(@btn-ghost-primary-color, @btn-ghost-primary-active-bg, @btn-ghost-primary-active-bg);
  }

  .btn-ripple {
    background-color: @btn-ghost-primary-active-bg;
  }

  .button-disabled(@btn-disable-ghost-primary-color, @btn-disable-ghost-primary-bg, @btn-disable-ghost-primary-border);

  svg {
    fill: @primary-color;
    color: @primary-color;
  }
}

.btn-ghost-primary() {
  .button-variant-ghost-primary();
}

.button-variant-ghost-white() {
  .button-color(@btn-ghost-white-color, @btn-ghost-white-bg, @btn-ghost-white-border);

  .btn-focus {
    box-shadow: inset 0 0 0 0 transparent;
  }

  &:hover {
    .button-hover(@btn-ghost-white-color, @btn-ghost-white-hover-bg, @btn-ghost-white-border);
  }

  &:focus {
    .button-color(@btn-ghost-white-color, @btn-ghost-white-focus-bg, @btn-ghost-white-focus-bg);
    .btn-focus {
      box-shadow: inset 0 0 0 2px @primary-color;
    }
  }

  &:active,
  &.active {
    .button-color(@btn-ghost-white-color, @btn-ghost-white-active-bg, @btn-ghost-white-active-bg);
  }

  .btn-ripple {
    background-color: @btn-ghost-white-active-bg;
  }

  .button-disabled(@btn-disable-ghost-white-color, @btn-disable-ghost-white-bg, @btn-disable-ghost-white-border);

  svg {
    fill: @white;
  }
}

.btn-ghost-white() {
  .button-variant-ghost-white();
}

.button-variant-danger() {
  .button-color(@btn-danger-color, @btn-danger-bg, @btn-danger-border);
  .btn-focus {
    box-shadow: inset 0 0 0 0 transparent;
  }

  &:hover {
    .button-hover(@btn-danger-color, @btn-danger-hover-bg, @btn-danger-hover-bg);
    box-shadow: 0 2px 4px 0 @btn-danger-shadow;
  }

  &:focus {
    .button-color(@btn-danger-color, @btn-danger-focus-bg, @btn-danger-focus-bg);
    .btn-focus {
      box-shadow: inset 0 0 0 2px @primary-color;
    }
  }

  &:active,
  &.active {
    .button-color(@btn-danger-color, @btn-danger-active-bg, @btn-danger-active-bg);
  }

  .btn-ripple {
    background-color: @btn-danger-active-bg;
  }

  svg {
    fill: @white;
    color: @white;
  }

  .button-disabled(@btn-disable-danger-color, @btn-disable-danger-bg, @btn-disable-danger-border);
}

.button-variant-success() {
  .button-color(@btn-success-color, @btn-success-bg, @btn-success-border);
  .btn-focus {
    box-shadow: inset 0 0 0 0 transparent;
  }

  &:hover {
    .button-hover(@btn-success-color, @btn-success-hover-bg, @btn-success-hover-bg);
  }

  &:focus {
    .button-color(@btn-success-color, @btn-success-focus-bg, @btn-success-hover-bg);
    .btn-focus {
      box-shadow: inset 0 0 0 2px @primary-color-darker-1;
    }
  }

  &:active,
  &.active {
    .button-color(@btn-success-color, @btn-success-active-bg, @btn-success-active-bg);
  }

  .btn-ripple {
    background-color: @btn-success-active-bg;
  }

  svg {
    fill: @white;
    color: @white;
  }

  .button-disabled(@btn-disable-success-color, @btn-disable-success-bg, @btn-disable-success-border);
}

.button-variant-warning() {
  .button-color(@btn-warning-color, @btn-warning-bg, @btn-warning-border);
  .btn-focus {
    box-shadow: inset 0 0 0 0 transparent;
  }

  &:hover {
    .button-hover(@btn-warning-color, @btn-warning-hover-bg, @btn-warning-hover-bg);
  }

  &:focus {
    .button-color(@btn-warning-color, @btn-warning-focus-bg, @btn-warning-hover-bg);
    .btn-focus {
      box-shadow: inset 0 0 0 2px @primary-color;
    }
  }

  &:active,
  &.active {
    .button-color(@btn-warning-color, @btn-warning-active-bg, @btn-warning-active-bg);
  }

  .btn-ripple {
    background-color: @btn-warning-active-bg;
  }

  svg {
    fill: @white;
    color: @white;
  }

  .button-disabled(@btn-disable-warning-color, @btn-disable-warning-bg, @btn-disable-warning-border);
}

.btn-warning() {
  .button-variant-warning();
}

.button-variant-flat() {
  .button-color(@btn-flat-color, @btn-flat-bg, @btn-flat-border);
  .btn-focus {
    box-shadow: inset 0 0 0 0 transparent;
  }

  &:hover {
    .button-hover(@btn-flat-hover-color, @btn-flat-bg, @btn-flat-border);
    box-shadow: none;

    &:not([disabled]) {
      text-decoration: underline;
    }
  }

  &:focus {
    .button-color(@btn-flat-hover-color, @btn-flat-bg, @btn-flat-border);
    .btn-focus {
      box-shadow: inset 0 0 0 2px @primary-color-darker-1;
    }
  }

  &:active,
  &.active {
    .button-color(@btn-flat-color, @btn-flat-bg, @btn-flat-border);
  }

  .btn-ripple {
    background-color: @btn-flat-border;
  }

  .button-disabled(@btn-disable-flat-color, @btn-disable-flat-bg, @btn-disable-flat-border);
}

.button-variant-primary-on-blue() {
  .button-color(@btn-primary-on-blue-color, @btn-primary-on-blue-bg, @btn-primary-on-blue-bg);

  &:hover,
  &:focus {
    .button-color(@btn-primary-on-blue-color, @btn-primary-on-blue-hover-bg, @btn-primary-on-blue-hover-bg);
    box-shadow: none;
  }

  &:active,
  &.active {
    .button-color(@btn-primary-on-blue-color, @btn-primary-on-blue-bg, @btn-primary-on-blue-bg);
  }

  .btn-ripple {
    background-color: @btn-primary-on-blue-bg;
  }

  .button-disabled(
    @btn-disable-primary-on-blue-color,
    @btn-disable-primary-on-blue-bg,
    @btn-disable-primary-on-blue-bg
  );
}

.btn-danger() {
  .button-variant-danger();
}

.button-variant-gray() {
  .button-color(@btn-gray-color, @btn-gray-bg, @btn-gray-border);

  &:hover,
  &:focus {
    .button-color(@btn-gray-color, @btn-gray-hover-bg, @btn-gray-hover-bg);
    box-shadow: @box-shadow-base;
  }

  &:active,
  &.active {
    .button-color(@btn-gray-color, @btn-gray-bg, @btn-gray-bg);
  }

  .btn-ripple {
    background-color: @btn-gray-bg;
  }

  .button-disabled(@btn-disable-gray-color, @btn-disable-gray-bg, @btn-disable-gray-border);
}

.button-variant-dark() {
  .button-color(@btn-dark-color, @btn-dark-bg, @btn-dark-border);

  &:hover,
  &:focus {
    .button-color(@btn-dark-color, @btn-dark-hover-bg, @btn-dark-hover-bg);
    box-shadow: @box-shadow-base;
  }

  &:active,
  &.active {
    .button-color(@btn-dark-color, @btn-dark-bg, @btn-dark-bg);
  }

  .btn-ripple {
    background-color: @btn-dark-bg;
  }

  .button-disabled(@btn-disable-dark-color, @btn-disable-dark-bg, @btn-disable-dark-border);
}

.@{btn-prefix-cls} {
  &-default {
    .button-variant-default();
  }

  &-tertiary {
    .button-variant-tertiary();
  }

  &-tertiary-white {
    .button-variant-tertiary-white();
  }

  &-success {
    .button-variant-success();
  }

  &-success&-clicked:after {
    border-color: @btn-success-bg;
  }

  &-ghost {
    .button-variant-ghost();
  }

  &-ghost-white {
    .button-variant-ghost-white();
  }

  &-ghost-primary {
    .button-variant-ghost-primary();
  }

  &-warning {
    .button-variant-warning();
  }

  &:not(.@{btn-prefix-cls}-circle) {
    border-radius: 3px;
  }

  &-gray {
    .button-variant-gray();
  }
}

.@{btn-prefix-cls} {
  &-flat {
    .button-variant-flat();
  }

  &-flat&-clicked:after {
    border-color: @btn-flat-color;
  }
}

.@{btn-prefix-cls} {
  &-primary-on-blue {
    .button-variant-primary-on-blue();
  }

  &-primary-on-blue&-clicked:after {
    border-color: @btn-primary-on-blue-color;
  }
}

.@{btn-prefix-cls} {
  &-dark {
    .button-variant-dark();
  }

  &-dark&-clicked:after {
    border-color: @btn-dark-color;
  }
}

.@{btn-prefix-cls}-group {
  display: flex;

  @media (max-width: @screen-xs) {
    flex-flow: column;
  }

  > .@{btn-prefix-cls} {
    border-radius: 0;
    width: 100%;

    &:hover:not(.@{btn-prefix-cls}-primary):not(.@{btn-prefix-cls}-secondary):not(.@{btn-prefix-cls}-custom-color):not(.@{btn-prefix-cls}-tertiary-white):not(.@{btn-prefix-cls}-ghost-white):not(.@{btn-prefix-cls}-ghost-primary):not(.@{btn-prefix-cls}-disabled):not(.@{btn-prefix-cls}-success):not(.@{btn-prefix-cls}-warning) {
      border-color: @btn-default-border;
      color: @heading-color;
    }

    &[disabled] {
      border-color: #dbe0e3 !important;
    }
  }
}

.@{btn-prefix-cls}-lg {
  font-size: 14px;
}

.@{btn-prefix-cls}-group-lg > .@{btn-prefix-cls} {
  font-size: 14px;
}

.@{btn-prefix-cls}-sm {
  padding: 0 12px;

  > span {
    margin: 0 4px;
  }
}

.@{btn-prefix-cls} {
  &-background-ghost {
    &:after {
      animation: none;
      animation-fill-mode: none;
    }
  }

  &-background-ghost&-danger {
    background-color: @btn-danger-ghost-bg !important;
    .button-variant-ghost(@btn-danger-bg);
  }
}

.@{btn-prefix-cls} {
  text-shadow: none;
  box-shadow: none;
}
